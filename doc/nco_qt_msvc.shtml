<!--
Usage:
/usr/bin/scp ~/nco/doc/index.shtml ~/nco/doc/nco_qt_msvc.shtml ~/nco/doc/logo_vs2010.png ~/nco/doc/logo_qt.png pvicente,nco@web.sf.net:/home/project-web/nco/htdocs
scp -p ~/nco/doc/index.shtml ~/nco/doc/nco_qt_msvc.shtml ~/nco/doc/logo_vs2010.png ~/nco/doc/logo_qt.png  dust.ess.uci.edu:/var/www/html/nco
-->

<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=unicode">
<meta http-equiv="cache-control" content="no-cache" />
<title>NCO Qt/MSVC build</title>
</head>

<body>

<h2>NCO Qt/MSVC build</h2>
This page contains instructions regarding building NCO with the Qt system and with Microsoft Windows Visual Studio 2015 (MSVC). 
This page is mostly important for developers that want to build NCO from source using Qt or MSVC.
<br>
<br>

<table border="0" width="100%">
  <tr>
    <td width="100%" bgcolor="#C0C0C0"></td>
  </tr>
</table>

<table border="0" width="25%">
<tr>
<td><h2>Build NCO with Qt</h2></td><td><img src="logo_qt.png" align=left></td>
</tr>
<tr>
</table>

<a target="_top" href="https://www.qt.io">Qt</a> is a cross platform build system. As of NCO 4.2.1, it is possible to build NCO with Qt, in a Linux, Mac OSX or 
Windows enviroment. NCO can be built either from the Qt IDE, QtCreator, or from the command line. To build NCO with QtCreator, just open the file /qt/nco.pro. 
To build NCO from the command line, do:
<br>
<p><tt>$ cd qt</tt>
<br><tt>$ qmake</tt>
<br><tt>$ make</tt></p>

<table border="0" width="100%">
  <tr>
    <td width="100%" bgcolor="#C0C0C0"></td>
  </tr>
</table>

<table border="0" width="35%">
<tr>
<td><h2>Build NCO with MSVC</h2></td><td><img src="logo_vs2010.png" align=left></td>
</tr>
<tr>
</table>

As of NCO 4.2.0, it is possible to build NCO with <a target="_top" href="https://www.visualstudio.com/en-us">Visual Studio 2013</a>. 
To build NCO with MSVC, open the file /qt/nco.sln with Visual Studio.

NCO depends on several pre-installed libraries, namely: HDF5 (including HDF5 High-Level), netCDF, zlib, szip, Antlr, GSL, Curl, UDUnits, Expat.
The NCO supplied Visual Studio projects assume static builds of these libraries. 
These are specified by means of the following Windows environment variables in the projects:
<br> 
<br> 
<tt>LIB_NETCDF</tt>
<br><tt>LIB_HDF5</tt>
<br><tt>LIB_HDF5_HL</tt>
<br><tt>LIB_ZLIB</tt>
<br><tt>LIB_SZIP</tt>
<br><tt>LIB_ANTLR</tt>
<br><tt>LIB_GSL</tt>
<br><tt>LIB_CURL</tt>
<br><tt>LIB_UDUNITS</tt>
<br><tt>LIB_EXPAT</tt>
<br>
<br>
Additionnaly, the following environment variable must also be defined for the location of the netCDF, UDUnits, GSL and Antlr header files:
<br><tt>HEADER_NETCDF</tt>
<br><tt>HEADER_UDUNITS</tt>
<br><tt>HEADER_GSL</tt>
<br><tt>HEADER_ANTLR</tt>
<br>
<br>

<table border="0" width="100%">
  <tr>
    <td width="100%" bgcolor="#C0C0C0"></td>
  </tr>
</table>

<table width="100%"><tr><td align="left" valign="top">
<a href="http://nco.sf.net">Homepage</a> 
</td>
</table>

</body>
</html>
